worker_processes auto;
worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        application live {
            live on;
            record off;
            
            # Verify stream key before allowing publish
            on_publish http://localhost:3001/api/streams/verify/$name;
            
            # Allow incoming RTMP streams from OBS and other external tools
            allow publish all;
            
            # Enable adaptive streaming
            exec_push ffmpeg -i rtmp://localhost:1935/live/$name
                # 1080p (source quality)
                -c:v libx264 -c:a aac -b:a 192k -b:v 4500k -maxrate 4500k -bufsize 9000k 
                -vf "scale=1920:1080" -preset veryfast -g 60 -r 30 
                -f flv rtmp://localhost:1935/hls/$name_1080p

                # 720p
                -c:v libx264 -c:a aac -b:a 128k -b:v 2500k -maxrate 2500k -bufsize 5000k 
                -vf "scale=1280:720" -preset veryfast -g 60 -r 30 
                -f flv rtmp://localhost:1935/hls/$name_720p

                # 480p
                -c:v libx264 -c:a aac -b:a 96k -b:v 1000k -maxrate 1000k -bufsize 2000k 
                -vf "scale=854:480" -preset veryfast -g 60 -r 30 
                -f flv rtmp://localhost:1935/hls/$name_480p

                # 360p
                -c:v libx264 -c:a aac -b:a 64k -b:v 500k -maxrate 500k -bufsize 1000k 
                -vf "scale=640:360" -preset veryfast -g 60 -r 30 
                -f flv rtmp://localhost:1935/hls/$name_360p;

            # Push incoming stream to WebSocket for browser streaming
            push rtmp://localhost:1935/ws/$name;
        }

        # WebSocket application for browser-based streaming
        application ws {
            live on;
            record off;
            
            # Only allow local connections (from the RTMP application)
            allow publish 127.0.0.1;
            deny publish all;
            
            # WebSocket configuration
            socket_dir /tmp/nginx;
            ping 30s;
            ping_timeout 10s;
            
            # Push to HLS application
            push rtmp://localhost:1935/hls;
        }

        application hls {
            live on;
            record off;

            # HLS
            hls on;
            hls_path /opt/nginx/hls;
            hls_fragment 4;
            hls_playlist_length 30;
            
            # Disable consuming the stream from nginx as rtmp
            deny play all;

            # HLS settings
            hls_variant _1080p BANDWIDTH=4628000,RESOLUTION=1920x1080;
            hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;
            hls_variant _480p BANDWIDTH=1128000,RESOLUTION=854x480;
            hls_variant _360p BANDWIDTH=628000,RESOLUTION=640x360;
        }
    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    default_type application/octet-stream;
    
    server {
        listen 8080;
        server_name localhost;
        
        # HLS Playlists
        location ~ \.m3u8$ {
            root /opt/nginx/hls;
            
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always;
            
            # HLS config
            types {
                application/vnd.apple.mpegurl m3u8;
            }
            
            # Disable caching for playlist files
            add_header Cache-Control no-cache;
            add_header Last-Modified $date_gmt;
            expires -1;
        }

        # HLS Segments
        location ~ \.ts$ {
            root /opt/nginx/hls;
            
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            
            # HLS config
            types {
                video/mp2t ts;
            }
            
            # Enable caching for segments
            add_header Cache-Control "public, max-age=5";
            expires 5s;
        }

        # Default location
        location / {
            root /opt/nginx/hls;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
    }
} 