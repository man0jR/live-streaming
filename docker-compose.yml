version: '3'

services:
  media-server:
    build:
      context: .
      dockerfile: apps/media-server/Dockerfile
    ports:
      - "1935:1935"  # RTMP
      - "8080:8080"  # HTTP (for HLS)
      - "3001:3001"  # API
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3001
      - STREAM_KEY_SECRET=your_secret_here
    volumes:
      - ./apps/media-server/hls:/opt/nginx/hls
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    image: node:18-alpine
    working_dir: /app
    command: npm run serve:media-server-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - STREAM_KEY_SECRET=your_secret_here
    volumes:
      - .:/app 

  cache-server:
    build:
      context: .
      dockerfile: apps/cache-server/Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - nginx_cache:/var/cache/nginx/hls_cache
      - ./dist/apps/cache-server:/app
    depends_on:
      - media-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - media-server
      - cache-server

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  nginx_cache:
  grafana_data: 